=begin
#AB_WebAPI

#Animation Builder Web API

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TemplatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TemplatesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TemplatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TemplatesApi' do
    it 'should create an instact of TemplatesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TemplatesApi)
    end
  end

  # unit tests for templates_get
  # Get Templates.
  # Get all templates.
  # @param [Hash] opts the optional parameters
  # @return [TemplateDTOList]
  describe 'templates_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for templates_post
  # Publish Template.
  # Publish a new template.
  # @param publish_request An object containing the details of the requested publish.
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'templates_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for templates_template_id_delete
  # Delete Template.
  # Delete template.
  # @param template_id The ID of the template to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'templates_template_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for templates_template_id_get
  # Get Template.
  # Get a specific template.
  # @param template_id The ID of the desired template.
  # @param [Hash] opts the optional parameters
  # @return [TemplateDTO]
  describe 'templates_template_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for templates_template_id_groups_get
  # Get Groups By Template.
  # Get all groups made from a template.
  # @param template_id The ID of the template.
  # @param [Hash] opts the optional parameters
  # @return [GroupDTOList]
  describe 'templates_template_id_groups_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for templates_template_id_groups_post
  # Create Group.
  # Create a new group from a template.
  # @param template_id The ID of the template for the new group.
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'templates_template_id_groups_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
