=begin
#AB_WebAPI

#Animation Builder Web API

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::RendersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RendersApi' do
  before do
    # run before each test
    @instance = SwaggerClient::RendersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RendersApi' do
    it 'should create an instact of RendersApi' do
      expect(@instance).to be_instance_of(SwaggerClient::RendersApi)
    end
  end

  # unit tests for renders_active_get
  # Get Active Renders.
  # Get list of active renders.
  # @param [Hash] opts the optional parameters
  # @return [RenderBatchDTOList]
  describe 'renders_active_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_active_render_id_delete
  # Cancel Active Render.
  # Cancel active render.
  # @param render_id Id of the render to cancel.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'renders_active_render_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_completed_get
  # Get Completed Renders.
  # Get list of completed renders.
  # @param [Hash] opts the optional parameters
  # @return [RenderBatchDTOList]
  describe 'renders_completed_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_create_set_id_render_type_post
  # Create Render Request.
  # Create new render request for an edit set.
  # @param set_id The ID of the edit set.
  # @param render_type The type of render (SmallPreview, LargePreview, or Full).
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'renders_create_set_id_render_type_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_notifications_options
  # Subscribe Renders.
  # Subscribe to render status notifications through a websocket connection.               This connection must be set up before using the subscribe group and subscribe item methods.              See also /renders/subscribe/{groupId} and /renders/subscribeItem/{requestItemId}.
  # @param [Hash] opts the optional parameters
  # @return [NotificationMessage]
  describe 'renders_notifications_options test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_output_group_id_set_id_get
  # Check Output Exists.
  # Check if output exists on disk or on versio.
  # @param group_id Id of the group the render is located.
  # @param set_id Id of the set the render is located.
  # @param [Hash] opts the optional parameters
  # @return [BOOLEAN]
  describe 'renders_output_group_id_set_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_queued_get
  # Get Queued Renders.
  # Get list of queued renders.
  # @param [Hash] opts the optional parameters
  # @return [RenderBatchDTOList]
  describe 'renders_queued_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_queued_render_id_delete
  # Cancel Queued Render.
  # Cancel queued render.
  # @param render_id Id of the render to cancel.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'renders_queued_render_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_subscribe_group_id_post
  # Subscribe Group.
  # Subscribe to notifications from a group.               Subscribing to a group will allow notifications to appear when new renders are started and completed. These notifications contain requestItemId data               which can be used to subscribe to a specific item using POST /renders/subscribeitem/{requestItemId}.
  # @param group_id Id of the group to subscribe to for notifications of new renders.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'renders_subscribe_group_id_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renders_subscribeitem_request_item_id_post
  # Subscribe Item.
  # Subscribe to notifications from a render item. See also /renders/notifications.
  # @param request_item_id Id of the item to subscribe to for notifications of render progress and status.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'renders_subscribeitem_request_item_id_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
